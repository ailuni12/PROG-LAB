Enunciado
Se requiere crear un algoritmo en PSeInt que permita generar y cargar un vector llamado vec con 10 posiciones.

1. Cada posición del vector debe contener un valor entero aleatorio entre 1 y 12. No importa el orden en que se generan ni cuáles son los números seleccionados, siempre que sean únicos.

Generador de azar (por si no recuerdan como era):
Azar(CotSup-CotaInf+1) +CotaInf

2. No se permiten valores repetidos dentro del vector, lo que implica que cada número guardado en el mismo debe ser único.

3. Durante la carga del vector, se deberá verificar que el número aleatorio generado no esté previamente en el vector. Si el número ya existe, se deberá generar un nuevo valor aleatorio (siempre entre 1 y 12) hasta encontrar uno que no se haya utilizado.

Requerimientos:
· Implementar un subalgoritmo llamado VerificaDigito que reciba el vector cargado hasta el momento y un número generado. Este subAlgoritmo deberá devolver un valor lógico indicando si el número ya existe en el vector.
· Usar un subalgoritmo mostrarVector que recorra el vector y muestre sus valores en una única línea, separados por espacios. Al finalizar la carga del vector.
· La carga del vector deberá ser automática y se SOLO detendrá cuando el vector esté lleno.

Notas:
· El rango de números permitidos es de 1 a 12. Como el vector tiene solo 10 posiciones, siempre será posible llenarlo con valores únicos.
· No se requiere ingreso manual de datos por parte del usuario, para ello les dejo la instrucción azar previamente.

--------------

Nota importante:
Para aprobar este examen final, se deberán cumplir estrictamente las siguientes condiciones:

1. El programa debe funcionar, resolviendo la problemática pedida.
2. Prohibición de ciclos infinitos: No está permitido el uso de ciclos infinitos, como mientras (1) o cualquier otra forma similar.
3. Prohibición de salidas abruptas: No se aceptarán soluciones que implementen salidas abruptas o forzadas del programa, como interrupciones fuera de un flujo lógico bien definido.
4. Cumplimiento de los requerimientos: El programa debe cumplir con todas las condiciones especificadas en el enunciado. Si alguna condición no se cumple, el examen
no será aprobado.
5. Control estructurado: Las condiciones de salida y manejo del programa deben estar diseñadas de manera controlada, estructurada y lógica.
Nota: El cumplimiento de estas condiciones es obligatorio para que el examen sea considerado como aprobado. Cualquier incumplimiento resultará en la desaprobación del mismo.